typeError=错误： 
typeWarning=警告： 
typeNetwork=网络： 
typeException=异常：  
typeCssParser=CSS 分析器： 
typeStrict=严格警告： 
msgCategory=分类： 
errFile=源文件：%S
errLine=行：%S
errLineCol=行：%S，列：%S
errCode=源代码：
jsWorkspaceTitle=JS 工作空间
btnHide=隐藏
btnPrefs=首选项
categoryPage=页面：
categoryConsole=控制台：
btnMutation=DOM 突变
tipMutation=切换 DOM 突变事件日志记录
btnPageNet=网络
tipPageNet=记录网络访问
btnPageCSS=CSS
tipPageCSS=记录 CSS 解析错误
btnPageJS=JS
tipPageJS=记录 JavaScript 异常
btnConsoleErrors=错误
tipConsoleErrors=记录调用至 console.error()
btnConsoleInfo=信息
tipConsoleInfo=记录调用至 console.info()
btnConsoleWarnings=警告
tipConsoleWarnings=记录调用至 console.warn()
btnConsoleLog=日志
tipConsoleLog=记录调用至 console.log()
btnGlobal=全局消息
tipGlobal=切换全局消息日志记录
localConsole=本地控制台
itemClear=清空控制台
stringFilter=过滤器
close.button=关闭
close.accesskey=C
update.button=更新
update.accesskey=U
# LOCALIZATION NOTE FOR `jsPropertyTitle` AND `jsPropertyInspectTitle`:
#
# The "PropertyPanel" is used to display a JS object to the user.
# If it is clear which object is being inspected (e.g., window, document object)
# the title of the panel is based on the `jsPropertyInspectTitle` string.
# If it isn't clear which object is being inspected, the `jsPropertyTitle` string
# gets used. This can be the case when the user logs an object to the WebConsole
# output using the console.log(aObjectToInspect) method.
#
# You can find a screenshot of the PropertyPanel here:
#   https://bug585030.bugzilla.mozilla.org/attachment.cgi?id=464034
jsPropertyTitle=对象查看器
# LOCALIZATION NOTE (jsPropertyInspectTitle):
#
# The %S is replaced by the evaluated code the user clicked on in the console.
#
# Example: The user executed `window.document` in the WebConsole. The `document`
# object is written to the output. If the user clicks on the `document` output
# in the console, a PropertyPanel will show up. The title of the PropertyPanel
# is set to `Inspect: window.document` because the clicked `document` object was
# evaluated based on the `window.document` string.
jsPropertyInspectTitle=查看：%S
copyCmd.label=复制
copyCmd.accesskey=C
